import math
import numpy as np

def problem2():
    x = np.array([0.217000000000000,0.0240000000000000,0.0760000000000000,0.892000000000000,0.128000000000000,0.250000000000000,0.0580000000000000,0.112000000000000,0.0620000000000000,0.0820000000000000,0.217000000000000,0.0240000000000000,0.0260000000000000,0.491000000000000,0.228000000000000,0.300000000000000,0.0580000000000000,0.112000000000000,0.0620000000000000,0.0820000000000000,0.216000000000000,0.0240000000000000,0.0760000000000000,0.216000000000000,0.216000000000000,0.216000000000000,0.0580000000000000,0.112000000000000,0.0620000000000000,0.0820000000000000])
    p = np.size(x)
    if p%3 != 0:
        print('x passed to this function must be n dimentional array where, n is perfectly divisible by 3.')
    n = p//3
    x = x.reshape(n,3)
    v = 0
    a = np.ones((n,n))
    b = a.dot(2)
    r = np.zeros((n-1,n))
    for i in range (n-1):
        for j in range(i+1, n):
            r[i][j] = np.sqrt((x[i] - x[j]).dot(x[i] - x[j]))
            v = v + (a[i][j]/r[i][j]**12 - b[i][j]/r[i][j]**6)
    f = v
    return f

f = problem2()
print(f)